/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guipart1;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author willmbp15
 */
public class guilua extends javax.swing.JFrame {

  File outfileafterobfuscation;
  private Component frame;
  private ArrayList<String> arrayListStringBlacklist = new ArrayList<>();
  private ArrayList<String> arrayListLuaFiles = new ArrayList<>();
  //private ArrayList<String> arrayListLuaFiles = new ArrayList<>();
  /**
   * Creates new form guilua
   */
  public guilua() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jFileChooserGetLuaFile = new javax.swing.JFileChooser();
    jButton4 = new javax.swing.JButton();
    jFileChooserGetBlackListFile = new javax.swing.JFileChooser();
    jLabel8 = new javax.swing.JLabel();
    jFileChooserGetLuaFolder = new javax.swing.JFileChooser();
    jPanelLower = new javax.swing.JPanel();
    jLabelLuaIcon = new javax.swing.JLabel();
    jLabelObfuscationOptions = new javax.swing.JLabel();
    jLabelGetFileToObfuscate = new javax.swing.JLabel();
    jButtonGetLuaFile = new javax.swing.JButton();
    jLabelBottomIconImage = new javax.swing.JLabel();
    jLabelDeveloperCredits = new javax.swing.JLabel();
    jButtonObfuscate = new javax.swing.JButton();
    jButtonExitProgram = new javax.swing.JButton();
    jTextFieldMakeOutputFile = new javax.swing.JTextField();
    jLabelGetBlackListFile = new javax.swing.JLabel();
    jButtonGetBlackListFile = new javax.swing.JButton();
    jButtonMakeOutputFile = new javax.swing.JButton();
    jButtonGetLuaFolder = new javax.swing.JButton();
    jLabelImportLuaFolder = new javax.swing.JLabel();
    jButtonHelp = new javax.swing.JButton();
    jLabelPart2ofGetLuaFolderLabel = new javax.swing.JLabel();
    jCheckBoxLevel1Obfuscate = new javax.swing.JCheckBox();
    jCheckBoxLevel2Obfuscate = new javax.swing.JCheckBox();
    jCheckBoxLevel3Obfuscate = new javax.swing.JCheckBox();
    jLabelLuaGuardObfuscatorv10 = new javax.swing.JLabel();

    jFileChooserGetLuaFile.setFileFilter(new LuaCustomFilter());
    jFileChooserGetLuaFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jFileChooserGetLuaFileActionPerformed(evt);
      }
    });

    jButton4.setText("jButton4");

    jFileChooserGetBlackListFile.setFileFilter(new TextCustomFilter());

    jLabel8.setText("Types of Obfuscation");

    jFileChooserGetLuaFolder.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
    jFileChooserGetLuaFolder.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jFileChooserGetLuaFolderActionPerformed(evt);
      }
    });

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jPanelLower.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153), 4));

    jLabelLuaIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guipart1/lua.gif"))); // NOI18N

    jLabelObfuscationOptions.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
    jLabelObfuscationOptions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabelObfuscationOptions.setText(" Pre-Obfuscation Tasks");

    jLabelGetFileToObfuscate.setText("Get File to Obfuscate");

    jButtonGetLuaFile.setText("Get Lua File");
    jButtonGetLuaFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonGetLuaFileActionPerformed(evt);
      }
    });

    jLabelBottomIconImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabelBottomIconImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guipart1/DSD-pku-uo.jpg"))); // NOI18N

    jLabelDeveloperCredits.setText("                                                LuaGuard is a joint project between PKU and UO Software developers");

    jButtonObfuscate.setText("Obfuscate");
    jButtonObfuscate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonObfuscateActionPerformed(evt);
      }
    });

    jButtonExitProgram.setText("Exit Program");
    jButtonExitProgram.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonExitProgramActionPerformed(evt);
      }
    });

    jTextFieldMakeOutputFile.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    jTextFieldMakeOutputFile.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jTextFieldMakeOutputFile.setEnabled(false);
    jTextFieldMakeOutputFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jTextFieldMakeOutputFileActionPerformed(evt);
      }
    });

    jLabelGetBlackListFile.setText("   Get Black List File");

    jButtonGetBlackListFile.setText("Get Black List File");
    jButtonGetBlackListFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonGetBlackListFileActionPerformed(evt);
      }
    });

    jButtonMakeOutputFile.setText("Make Output File");
    jButtonMakeOutputFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonMakeOutputFileActionPerformed(evt);
      }
    });

    jButtonGetLuaFolder.setText("Get Lua Folder");
    jButtonGetLuaFolder.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonGetLuaFolderActionPerformed(evt);
      }
    });

    jLabelImportLuaFolder.setText("Get Entire Lua Folder");

    jButtonHelp.setText("Help");

    jLabelPart2ofGetLuaFolderLabel.setText("      To Obfuscate");

    jCheckBoxLevel1Obfuscate.setText("Level 1 Obfuscation");
    jCheckBoxLevel1Obfuscate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jCheckBoxLevel1ObfuscateActionPerformed(evt);
      }
    });

    jCheckBoxLevel2Obfuscate.setText("Level 2 Obfuscation");
    jCheckBoxLevel2Obfuscate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jCheckBoxLevel2ObfuscateActionPerformed(evt);
      }
    });

    jCheckBoxLevel3Obfuscate.setText("Level 3 Obfuscation");
    jCheckBoxLevel3Obfuscate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jCheckBoxLevel3ObfuscateActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanelLowerLayout = new javax.swing.GroupLayout(jPanelLower);
    jPanelLower.setLayout(jPanelLowerLayout);
    jPanelLowerLayout.setHorizontalGroup(
      jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelLowerLayout.createSequentialGroup()
        .addGap(20, 20, 20)
        .addComponent(jLabelLuaIcon)
        .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanelLowerLayout.createSequentialGroup()
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanelLowerLayout.createSequentialGroup()
                .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jButtonMakeOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                  .addComponent(jButtonObfuscate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanelLowerLayout.createSequentialGroup()
                    .addComponent(jButtonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButtonExitProgram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                  .addComponent(jTextFieldMakeOutputFile)))
              .addGroup(jPanelLowerLayout.createSequentialGroup()
                .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jLabelGetFileToObfuscate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(jButtonGetLuaFile, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanelLowerLayout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addComponent(jLabelImportLuaFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                      .addGroup(jPanelLowerLayout.createSequentialGroup()
                        .addComponent(jLabelPart2ofGetLuaFolderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelGetBlackListFile, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                  .addGroup(jPanelLowerLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(jButtonGetLuaFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButtonGetBlackListFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
            .addGap(31, 31, 31))
          .addGroup(jPanelLowerLayout.createSequentialGroup()
            .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanelLowerLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabelObfuscationOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(jPanelLowerLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxLevel1Obfuscate))
              .addGroup(jPanelLowerLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxLevel2Obfuscate))
              .addGroup(jPanelLowerLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxLevel3Obfuscate)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
      .addGroup(jPanelLowerLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabelDeveloperCredits, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jLabelBottomIconImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    jPanelLowerLayout.setVerticalGroup(
      jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelLowerLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabelLuaIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(jPanelLowerLayout.createSequentialGroup()
            .addComponent(jLabelObfuscationOptions)
            .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLowerLayout.createSequentialGroup()
                .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                  .addGroup(jPanelLowerLayout.createSequentialGroup()
                    .addComponent(jLabelGetBlackListFile)
                    .addGap(9, 9, 9))
                  .addGroup(jPanelLowerLayout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(jLabelImportLuaFolder)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelPart2ofGetLuaFolderLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                  .addComponent(jButtonGetBlackListFile)
                  .addComponent(jButtonGetLuaFolder)))
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLowerLayout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelGetFileToObfuscate)
                .addGap(9, 9, 9)
                .addComponent(jButtonGetLuaFile)))
            .addGap(18, 18, 18)
            .addComponent(jCheckBoxLevel1Obfuscate)
            .addGap(18, 18, 18)
            .addComponent(jCheckBoxLevel2Obfuscate)
            .addGap(18, 18, 18)
            .addComponent(jCheckBoxLevel3Obfuscate)
            .addGap(68, 68, 68)
            .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jTextFieldMakeOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButtonMakeOutputFile))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanelLowerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jButtonObfuscate)
              .addComponent(jButtonExitProgram)
              .addComponent(jButtonHelp))
            .addGap(25, 25, 25)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabelDeveloperCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabelBottomIconImage, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    jLabelLuaGuardObfuscatorv10.setFont(new java.awt.Font("Malayalam MN", 0, 36)); // NOI18N
    jLabelLuaGuardObfuscatorv10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabelLuaGuardObfuscatorv10.setText("LuaGuard Obfuscator v1.0");
    jLabelLuaGuardObfuscatorv10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204), 4));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jLabelLuaGuardObfuscatorv10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(jPanelLower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jLabelLuaGuardObfuscatorv10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanelLower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jButtonExitProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitProgramActionPerformed
    System.out.println("Exit Button Pressed");
    System.exit(0);
  }//GEN-LAST:event_jButtonExitProgramActionPerformed

  private void jButtonGetLuaFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetLuaFileActionPerformed
    //System.out.println("Get file pressed");

    this.arrayListLuaFiles.clear();

    int returnVal = jFileChooserGetLuaFile.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
      this.arrayListLuaFiles.add(jFileChooserGetLuaFile.getSelectedFile().getName());

      //System.out.println(("The filename is " + jFileChooserGetLuaFile.getSelectedFile().getName()));
      //System.out.println("The File Selected is " + jFileChooserGetLuaFile.getSelectedFile().getName());
      // Do obfuscation with file
    } else {
      System.out.println("File access cancelled by user.");
    }

  }//GEN-LAST:event_jButtonGetLuaFileActionPerformed

  private void jButtonObfuscateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObfuscateActionPerformed
    System.out.println("Obfuscate Button Pressed");

  }//GEN-LAST:event_jButtonObfuscateActionPerformed

  private void jTextFieldMakeOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMakeOutputFileActionPerformed
    //String outfilenamefromuserinput = jTextField1.getText();
    //File outfilename = new File(outfilenamefromuserinput);
    // for robustness need to not take input
    //System.out.println("Output FileName = " + outfilenamefromuserinput);

    //jTextField1.setText("Obfuscated_"+infilefromlua);
  }//GEN-LAST:event_jTextFieldMakeOutputFileActionPerformed

  private void jFileChooserGetLuaFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooserGetLuaFileActionPerformed
    //String outfilenamefromuserinput = jTextFieldMakeOutputFile.getText();
    //System.out.println("Output FileName = " + outfilenamefromuserinput);
    //jTextField1.setText("Obfuscated_"+infilefromlua.getName());
  }//GEN-LAST:event_jFileChooserGetLuaFileActionPerformed

  private void jButtonMakeOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMakeOutputFileActionPerformed
    //String outfilenamefromuserinput = jTextField1.getText();
    //System.out.println("Output FileName = " + outfilenamefromuserinput);

    if ((this.arrayListLuaFiles.size() > 0)
            && (this.arrayListStringBlacklist.size() > 0)) {

      for (int intIndex = 0; intIndex < this.arrayListLuaFiles.size(); intIndex++) {
        String stringforoutputfilename = "Obfuscated_" + this.arrayListLuaFiles.get(intIndex);
        jTextFieldMakeOutputFile.setText(stringforoutputfilename);
      }

      Integer integerSize = this.arrayListLuaFiles.size();

      if (integerSize == 1) {

        jTextFieldMakeOutputFile.setText(this.arrayListLuaFiles.get(0).toString() + " was loaded.");
      } else {
        jTextFieldMakeOutputFile.setText(integerSize.toString() + " Lua Files were loaded.");
      }
    } else {
      if (this.arrayListLuaFiles.size() < 1) {
        JOptionPane.showMessageDialog(null,
                "Error! Please select one or more Lua Files",
                "Error!",
                JOptionPane.ERROR_MESSAGE);
        return;
      }

      if (this.arrayListStringBlacklist.size() < 1) {
        JOptionPane.showMessageDialog(null,
                "Error! Please select a Blacklist File",
                "Error!",
                JOptionPane.ERROR_MESSAGE);
        return;
      }
    }
  }//GEN-LAST:event_jButtonMakeOutputFileActionPerformed

  public void getClassFolders(File file, ArrayList<String> fileNames) {
    for (File child : file.listFiles()) {
      if (child.isDirectory()) {
        getClassFolders(child, fileNames);
      } else if (child.getName().endsWith(".lua")) {
        fileNames.add(child.getName());

      }
    }
    //System.out.println("fileNames Size is: " + fileNames.size());
    //for (String fileName : fileNames) {
    //  System.out.println(fileName);
    //}
  }

  private void jButtonGetLuaFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetLuaFolderActionPerformed
    //System.out.println("Get Lua Folder pressed");

    this.arrayListLuaFiles.clear();

    int returnVal = jFileChooserGetLuaFolder.showOpenDialog(this);

    if (returnVal == JFileChooser.APPROVE_OPTION) {

      File fileSelectedDirectory = jFileChooserGetLuaFolder.getSelectedFile();

      getClassFolders(fileSelectedDirectory, arrayListLuaFiles);
      //"breakpoint".toString();
    } else {
      System.out.println("File access cancelled by user.");
    }
  }//GEN-LAST:event_jButtonGetLuaFolderActionPerformed

  private void jFileChooserGetLuaFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooserGetLuaFolderActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jFileChooserGetLuaFolderActionPerformed

  private void jButtonGetBlackListFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetBlackListFileActionPerformed

    this.arrayListStringBlacklist.clear();

    //System.out.println("Get Black List File pressed");
    int returnVal = jFileChooserGetBlackListFile.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
      File infile = jFileChooserGetBlackListFile.getSelectedFile();

      //System.out.println(("The filename is " + infile.getName()));
      //System.out.println("The Black List File Selected is " + infile);
      try {
        String stringTextLine;

        BufferedReader bufferedReaderReference
                = new BufferedReader(new FileReader(infile));

        arrayListStringBlacklist.clear();

        FileWriter fileWriterReference = null;
        BufferedWriter bufferedWriterReference = null;

        try {
          fileWriterReference = new FileWriter(infile.getName().replace(".txt", "") + "_output.txt");
        } catch (IOException ex) {
          Logger.getLogger(guilua.class.getName()).log(Level.SEVERE, null, ex);
        }

        bufferedWriterReference = new BufferedWriter(fileWriterReference);

        if (bufferedWriterReference == null) {
          return;
        }

        try {
          while ((stringTextLine = bufferedReaderReference.readLine()) != null) {
            if (stringTextLine.contains(" ") == true) {
              String contents = "Invalid file format. Words must not have spaces";
              //System.out.println("blacklist: " + contents);
              JOptionPane.showMessageDialog(frame, contents);
              System.out.println("Invalid file format. Words must not have spaces.");
              arrayListStringBlacklist.clear();
              break;
            }

            if (stringTextLine.trim().length() > 0) {
              arrayListStringBlacklist.add(stringTextLine.trim());
              bufferedWriterReference.write(stringTextLine.trim() + "\r\n");
            }
          }

          //System.out.println("arrayListStringBlacklist size is: " + arrayListStringBlacklist.size());
          //System.out.println(arrayListStringBlacklist);
        } catch (IOException ex) {
          Logger.getLogger(guilua.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
          bufferedWriterReference.close();
        } catch (IOException ex) {
          Logger.getLogger(guilua.class.getName()).log(Level.SEVERE, null, ex);
        }

      } catch (FileNotFoundException ex) {
        Logger.getLogger(guilua.class.getName()).log(Level.SEVERE, null, ex);
      }

    } else {
      System.out.println("File access cancelled by user.");
    }

  }//GEN-LAST:event_jButtonGetBlackListFileActionPerformed

  private void jCheckBoxLevel1ObfuscateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLevel1ObfuscateActionPerformed
    if (jCheckBoxLevel1Obfuscate.isSelected()) {
      System.out.println("Level 1 Obfuscation CheckBox Selected");
    } else {
      System.out.println("Level 1 Obfuscation CheckBox Unchecked");
    }
  }//GEN-LAST:event_jCheckBoxLevel1ObfuscateActionPerformed

  private void jCheckBoxLevel2ObfuscateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLevel2ObfuscateActionPerformed
    if (jCheckBoxLevel2Obfuscate.isSelected()) {
      System.out.println("Level 2 Obfuscation CheckBox Selected");
    } else {
      System.out.println("Level 2 Obfuscation CheckBox Unchecked");
    }
  }//GEN-LAST:event_jCheckBoxLevel2ObfuscateActionPerformed

  private void jCheckBoxLevel3ObfuscateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLevel3ObfuscateActionPerformed
    if (jCheckBoxLevel3Obfuscate.isSelected()) {
      System.out.println("Level 3 Obfuscation CheckBox Selected");
    } else {
      System.out.println("Level 3 Obfuscation CheckBox Unchecked");
    }
  }//GEN-LAST:event_jCheckBoxLevel3ObfuscateActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(guilua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(guilua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(guilua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(guilua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new guilua().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton4;
  private javax.swing.JButton jButtonExitProgram;
  private javax.swing.JButton jButtonGetBlackListFile;
  private javax.swing.JButton jButtonGetLuaFile;
  private javax.swing.JButton jButtonGetLuaFolder;
  private javax.swing.JButton jButtonHelp;
  private javax.swing.JButton jButtonMakeOutputFile;
  private javax.swing.JButton jButtonObfuscate;
  private javax.swing.JCheckBox jCheckBoxLevel1Obfuscate;
  private javax.swing.JCheckBox jCheckBoxLevel2Obfuscate;
  private javax.swing.JCheckBox jCheckBoxLevel3Obfuscate;
  private javax.swing.JFileChooser jFileChooserGetBlackListFile;
  private javax.swing.JFileChooser jFileChooserGetLuaFile;
  private javax.swing.JFileChooser jFileChooserGetLuaFolder;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabelBottomIconImage;
  private javax.swing.JLabel jLabelDeveloperCredits;
  private javax.swing.JLabel jLabelGetBlackListFile;
  private javax.swing.JLabel jLabelGetFileToObfuscate;
  private javax.swing.JLabel jLabelImportLuaFolder;
  private javax.swing.JLabel jLabelLuaGuardObfuscatorv10;
  private javax.swing.JLabel jLabelLuaIcon;
  private javax.swing.JLabel jLabelObfuscationOptions;
  private javax.swing.JLabel jLabelPart2ofGetLuaFolderLabel;
  private javax.swing.JPanel jPanelLower;
  private javax.swing.JTextField jTextFieldMakeOutputFile;
  // End of variables declaration//GEN-END:variables
}
